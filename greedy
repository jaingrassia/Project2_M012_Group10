def HappiestCaf(caf1:list, caf2:list, caf3:list):  # This function genrates which caf has the highest happiness value
    avghap1 = sum(caf1) / len(caf1)  # Gives average of the list Example: p1 = [1, 5, 3] sum(p1) return 1+5+3= 9--- len(p1) return 3 because theres is 3 items in the list
    avghap2 = sum(caf2) / len(caf2)
    avghap3 = sum(caf3) / len(caf3)
    if avghap1 > avghap2 and avghap1 > avghap3: # These lines of code is used so eGreedy will return the happinessvalue of each caf
        return 1
    elif avghap1 < avghap2 and avghap2 > avghap3:
        return 2
    else:
        return 3

def happyvalgen(p1:int, list1:list, list2:list, list3:list): # This is for the "i" in eGreedy 
    if p1 == 1:    # When "i = random.randint(1, 3)" is ran in eGeedy the function will turn to this one and run the corresponding line of code depending on the value that randint choose 
        list1.append(random.normalvariate(10, 8)) 
    elif p1 == 2:
        list2.append(random.normalvariate(15, 6))
    else:
        list3.append(random.normalvariate(12, 5))

def eGreedy(e=10):  # Actual function 
    c1 = [random.normalvariate(10, 8)] # This three lines of code account for the first vist *ONE PER DAY*  for the first 3 days 
    c2 = [random.normalvariate(15, 6)]
    c3 = [random.normalvariate(12, 5)]
    for day in range(1, 297):     # This loop runs for the remaining 297 days
        r = random.random() # generates a number 0 through 1
        if r < float(e) / 100:  # if the number generated is less than 10% then choose a random caf
            i = random.randint(1, 3)
            happyvalgen(i, c1, c2, c3)
        else:
            i = HappiestCaf(c1, c2, c3) # if the number generated by "r" is bigger than 10% the function will choose whatever caf gave the high happiness value
            happyvalgen(i, c1, c2, c3)
    return sum(c1 + c2 + c3)  

print(eGreedy())
